<script>
    (function () {
        var renderApiUrl = "/designer-preview/";

        function getUrl(part) {
            return renderApiUrl + part;
        }

        var app = angular.module("storefrontApp");

        app.controller("previewController", ["$http", '$sce', '$scope', '$window', function ($http, $sce, $scope, $window) {
            $scope.title = "";
            $scope.blocks = []; // html strings
            var linkEls = $("link[rel='stylesheet'][href]");

            $window.addEventListener('message', function (e) {
                var data = event.data;
                dispatchEvent(data.type, data);
            });

            function dispatchEvent(type, data) {
                $scope.$apply(function () {
                    clearPreviewItems();
                    switch (type) {
                        case "settings":
                            reloadDocument();
                            break;
                        case "page":
                            reloadPage(data.content);
                            break;
                        case "move":
                            var current = $scope.blocks[data.content.currentIndex];
                            $scope.blocks.splice(data.content.currentIndex, 1);
                            $scope.blocks.splice(data.content.newIndex, 0, current);
                            break;
                        case "addOrUpdate":
                            if (!!data.content) {
                                var model = createBlockModel(data.content);
                                var exists = findById(model.id);
                                if (!exists) {
                                    $scope.blocks.push(model);
                                } else {
                                    $scope.blocks[exists.index] = model;
                                }
                                renderBlock(model);
                            }
                            break;
                        case "remove":
                            var exists = findById(data.content);
                            $scope.blocks.splice(exists.index, 1)
                            break;
                    }
                });
            }

            function reloadDocument() {
                $("body").animate({ opacity: 0 }, {
                    complete: function () {
                        document.location.reload();
                    }
                });
            }

            function clearPreviewItems() {
                for (var i = 0; i < $scope.blocks.length; i++) {
                    var block = $scope.blocks[i];
                    if (!block.id) {
                        $scope.blocks.splice(i, 1)
                        i--;
                    }
                }
            }

            function reloadPage(page) {
                // { settings, sections }
                $scope.title = page.settings.title;
                $scope.blocks = [];
                for (var i = 0; i < page.sections.length; i++) {
                    var section = page.sections[i];
                    var model = createBlockModel(section);
                    $scope.blocks.push(model);
                }
                renderBlocks();
            }

            function renderBlocks() {
                for (var i = 0; i < $scope.blocks.length; i++) {
                    var block = $scope.blocks[i];
                    renderBlock(block)
                }
            }

            function renderBlock(block) {
                $http.post(getUrl("block"), block.source).then(function (result) {
                    block.result = $sce.trustAsHtml(result.data);
                })
            }

            function createBlockModel(section) {
                return {
                    id: section.id,
                    source: section,
                    result: ''
                };
            }

            function findById(id) {
                for (var i = 0; i < $scope.blocks.length; i++) {
                    var block = $scope.blocks[i];
                    if (block.id == id)
                        return { block: block, index: i };
                }
                return null;
            }

        }]);
        $("body").css({ opacity: 0, display: 'none' });
        var styles = $("link[rel='stylesheet'][href]");
        styles.each(function () {
            var link = $(this);
            var url = link.attr("href");
            url = url + (url.indexOf("?") == -1 ? "?" : "&") + "v=" + Date.now() + "&mode=preview";
            link.attr("href", url);
        });
        setTimeout(function () {
            $("body").css({ display: 'block' });
            $("body").animate({ opacity: 1 });
        }, 2000);
    })();
</script>

{% raw %}

<div class="grid" ng-controller="previewController">

    <div class="grid-item large--two-thirds push--large--one-sixth">

        <h1>{{ title }}</h1>

        <div id="preview-container">
            <div ng-repeat="item in blocks track by item.id" ng-bind-html="item.result"></div>
        </div>

    </div>

</div>

{% endraw %}
